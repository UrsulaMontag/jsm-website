name: Deploy to Vercel

on:
  workflow_run:
    workflows: [ "Build" ]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod --yes"
          working-directory: ./
          zeit-token: ''
        env:
          NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

      - name: Wait for deployment
        run: sleep 30

      - name: Run Production Cypress Tests
        if: success()
        env:
          CYPRESS_BASE_URL: ${{ steps.deploy.outputs.preview-url }} # Use the Vercel deployment URL
          NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        run: cypress run

      - name: Upload Production Cypress Screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: prod-cypress-screenshots
          path: cypress/screenshots

      - name: Upload Production Cypress Videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: prod-cypress-videos
          path: cypress/videos
